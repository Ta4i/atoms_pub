<!DOCTYPE html>
<html>
    <head>
        <title>Map</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" type="text/css" href="/static/css/atoms.css">
        <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.css" />
        <script src="/static/js/modernizr.js" type="text/javascript"></script>
        <script src="http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.js" type="text/javascript"></script>
    </head>
    <body>
        <div id="map"></div>
        <script type="text/javascript">
            window.atoms = window.atoms || {};
        </script>
        <script type="text/javascript">
            (function(){
                atoms.map = L.map('map').setView([51.505, -0.09], 12);
                L.tileLayer('http://{s}.tiles.mapbox.com/v3/ta4i.i9hi7427/{z}/{x}/{y}.png', {
                    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://mapbox.com">Mapbox</a>',
                    maxZoom: 18
                }).addTo(atoms.map);
                // var marker = L.marker([51.5, -0.09]).addTo(atoms.map);
                // var circle = L.circle([51.5, -0.09], 5000, {
                //     color: '#369',
                //     fillColor: '#39f',
                //     fillOpacity: 0.3
                // }).addTo(atoms.map);
                // circle.bindPopup("I am a circle.");
                // var popup = L.popup()
                //     .setLatLng([51.5, -1.09])
                //     .setContent("I am a standalone popup.")
                //     .openOn(atoms.map);

                var popup = L.popup();

                atoms.map.on('click', onMapClick);

                function onMapClick(e) {
                    popup
                        .setLatLng(e.latlng)
                        .setContent("You clicked the map at " + e.latlng.toString())
                        .openOn(atoms.map);
                }
            })();
        </script>
        <script type="text/javascript">
            // Main
            (function(){
                atoms.user = atoms.user || {};
                if (Modernizr.geolocation) {
                    navigator.geolocation.getCurrentPosition(show_map);
                } else {
                    alert('Требуется разрешение геолокации, или браузер, который поддерживает геолокацию');
                }
                function show_map(geo){
                    console.warn('SHOW_MAP', geo);
                    atoms.user.geo = geo;
                    atoms.user.sid = localStorage.sid || newSid();
                    localStorage.sid = atoms.user.sid;
                    atoms.user.latlng = [geo.coords.latitude, geo.coords.longitude];
                    atoms.map.setView(atoms.user.latlng);

                    var userIcon = L.icon({
                        iconUrl       : '/static/img/marker.png',
                        iconRetinaUrl : '/static/img/marker@2x.png',
                        iconSize      : [64, 64],
                        iconAnchor    : [32, 64],
                        className     : 'user marker'
                    });

                    atoms.user.marker = L.marker(atoms.user.latlng, {icon: userIcon}).addTo(atoms.map);
                    atoms.ws = new WebSocket('http://54.200.66.15:3001/');
                    atoms.ws.onopen = function(){
                        atoms.user.interval = setInterval(function(){
                            atoms.user.latlng = [geo.coords.latitude, geo.coords.longitude];
                            atoms.user.marker.setLatLng(atoms.user.latlng);
                            var message = {
                                type: 'USER_COORDINATES',
                                lat: atoms.user.latlng[0],
                                lng: atoms.user.latlng[1],
                                sid: atoms.user.sid
                            };
                            atoms.ws.send(JSON.stringify(message));
                        },5000);
                    };
                    atoms.ws.onmessage = function(message){
                        console.log('onmessage', message);
                        var data = JSON.parse(message.data);
                        console.log('Respond type: ', data.type, data.data);
                    };
                    atoms.ws.onclose = function(message){

                    };
                };
                function newSid(){
                    return 'xxxxxxxxxxxxxxxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);
                        return v.toString(16);
                    });
                }
            })();
        </script>
    </body>
</html>
